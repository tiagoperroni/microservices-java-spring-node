##server.port=8080

## info
info.app.name=Order Microservice
info.app.description=Online Shop Order Application
info.app.version=1.0.0

spring.application.name=order
spring.profiles.active=dev
spring.config.import=optional:configserver:http://localhost:8080

management.endpoints.web.exposure.include=*

##
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.serviceUrl.defaultZone=http://localhost:8070/eureka

## zip
spring.sleuth.sampler.probability=1.0
spring.zipkin.base-url=http://localhost:9411/

## retry
resilience4j.retry.instances.retryForMakeOrder.max-attempts=3
resilience4j.retry.instances.retryForMakeOrder.wait-duration=2000

## DB
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
## PostgreSQL
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

## config for rabbit
spring.zipkin.sender.type=${ZIPKIN_SENDER_TYPE}
spring.zipkin.rabbitmq.queue=${ZIPKIN_QUEUE}
spring.rabbitmq.host=${RABBIT_HOST}
spring.rabbitmq.port=${RABBIT_PORT}
spring.rabbitmq.username=${RABBIT_USERNAME}
spring.rabbitmq.password=${RABBIT_PASSWORD}

## kafka
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
topic.shop-order=topic_shop_order